window.onload = function(){
  canvas = document.createElement("canvas");
  canvas.width = 640;
  canvas.height = 480;
  //insert into HTML
  document.body.appendChild(canvas);
  pen = canvas.getContext("2d");
  document.addEventListener("keydown", keyPush);
  // mouse lisenters
  document.addEventListener("mousemove", mouseMoveHandler, false);
  document.addEventListener("mousedown", mouseClickHandler, false);
  spaceship = new Image();
  spaceship.src = ""


  //frames per second
  var fps = 30;
  setInterval(update,1000/fps);
  // enemy spawn rate
  setInterval(spawn,1000);
}
// player stats
player_x = 100;
player_y = 100;
player_speed = 15;
player_dim = 30;

// enemy stats
enemy_list =[];
enemy_speed = 5;
enemy_dim = 25;

//shot stats
shots_list = [];
shot_speed = 7;
shot_dim = 4;

// enemy spawn
function spawn(){
  enemy_list.push({x:canvas.width,y:Math.random()*canvas.height});
}

// update each frame
function update(){
   //draw black background
  pen.fillStyle = "black";
  pen.fillRect(0,0,canvas.width,canvas.height);
   //draw player
  pen.fillStyle = "blue";
  pen.fillRect(player_x-player_dim/2,player_y-player_dim/2,player_dim,player_dim);
   //drawing shots shots_list
  pen.drawImage(spaceship,
  player_x - player_dim / 2,
  player_y - player_dim / 2,
  player_dim,
  player_dim);

  pen.fillStyle = 'lime';
  for (var s = 0; s < shots_list.length; s++){
    shots_list[s].x += shot_speed;
    pen.fillRect(
      shots_list[s].x - shot_dim / 2,
      shots_list[s].y - shot_dim / 2,
      shot_dim,
      shot_dim
      );
    for (var e = enemy_list.length - 1; e >= 0; e--){
      // Calculate the distance between the shots and enemies
      var diff_x = Math.abs(enemy_list[e].x - shots_list[s].x);
      var diff_y = Math.abs(enemy_list[e].y - shots_list[s].y);
      var dist = Math.sqrt(diff_x * diff_x + diff_y * diff_y);
      // detects if a shot hits the enemy
        if (dist < (shot_dim + enemy_dim) / 2) {
          enemy_list.splice(e, 1);
        }
    }
  }
  //drawing our enemy list
  pen.fillStyle = 'red';
  for (var e = 0; e < enemy_list.length; e++){
    enemy_list[e].x -= enemy_speed;
    pen.fillRect(
      enemy_list[e].x - enemy_dim / 2,
      enemy_list[e].y - enemy_dim / 2,
      enemy_dim,
      enemy_dim);
    var diff_x = Math.abs(enemy_list[e].x - player_x);
    var diff_y = Math.abs(enemy_list[e].y - player_y);
    var dist = Math.sqrt(diff_x * diff_x + diff_y * diff_y);
    // detectt if enemy hits hero
    if (dist < (player_dim + enemy_dim) / 2){
      //clear stats and reset if player gets hits
      shots_list = [];
      enemy_list = [];
      player_x = player_y = 100;
      break;
    }
  }
}

function keyPush(evt){
  switch(evt.keyCode){
    case 32: //space bar
      shots_list.push({ x: player_x, y: player_y });
      break;
    case 37: // left 
      player_x -= player_speed
      break;
    case 38: //up 
      player_y -= player_speed
      break;
    case 39: // right
      player_x += player_speed
      break;
    case 40: // down 
      player_y += player_speed
      break;

    
  }
}

function mouseMoveHandler(e) {
 player_y = e.clientY
}

function mouseClickHandler(e) {
 // this checks for the left button
 if(e.button == 0){
   shots_list.push({ x: player_x, y: player_y });
 }
}
